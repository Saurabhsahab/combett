{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar containsNode = require(\"./containsNode\");\n/**\n * Gets an element's bounding rect in pixels relative to the viewport.\n *\n * @param {DOMElement} elem\n * @return {object}\n */\n\n\nfunction getElementRect(elem) {\n  var docElem = elem.ownerDocument.documentElement; // FF 2, Safari 3 and Opera 9.5- do not support getBoundingClientRect().\n  // IE9- will throw if the element is not in the document.\n\n  if (!('getBoundingClientRect' in elem) || !containsNode(docElem, elem)) {\n    return {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n  } // Subtracts clientTop/Left because IE8- added a 2px border to the\n  // <html> element (see http://fburl.com/1493213). IE 7 in\n  // Quicksmode does not report clientLeft/clientTop so there\n  // will be an unaccounted offset of 2px when in quirksmode\n\n\n  var rect = elem.getBoundingClientRect();\n  return {\n    left: Math.round(rect.left) - docElem.clientLeft,\n    right: Math.round(rect.right) - docElem.clientLeft,\n    top: Math.round(rect.top) - docElem.clientTop,\n    bottom: Math.round(rect.bottom) - docElem.clientTop\n  };\n}\n\nmodule.exports = getElementRect;","map":{"version":3,"names":["containsNode","require","getElementRect","elem","docElem","ownerDocument","documentElement","left","right","top","bottom","rect","getBoundingClientRect","Math","round","clientLeft","clientTop","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/fbjs/lib/getElementRect.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\nvar containsNode = require(\"./containsNode\");\n/**\n * Gets an element's bounding rect in pixels relative to the viewport.\n *\n * @param {DOMElement} elem\n * @return {object}\n */\n\n\nfunction getElementRect(elem) {\n  var docElem = elem.ownerDocument.documentElement; // FF 2, Safari 3 and Opera 9.5- do not support getBoundingClientRect().\n  // IE9- will throw if the element is not in the document.\n\n  if (!('getBoundingClientRect' in elem) || !containsNode(docElem, elem)) {\n    return {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n  } // Subtracts clientTop/Left because IE8- added a 2px border to the\n  // <html> element (see http://fburl.com/1493213). IE 7 in\n  // Quicksmode does not report clientLeft/clientTop so there\n  // will be an unaccounted offset of 2px when in quirksmode\n\n\n  var rect = elem.getBoundingClientRect();\n  return {\n    left: Math.round(rect.left) - docElem.clientLeft,\n    right: Math.round(rect.right) - docElem.clientLeft,\n    top: Math.round(rect.top) - docElem.clientTop,\n    bottom: Math.round(rect.bottom) - docElem.clientTop\n  };\n}\n\nmodule.exports = getElementRect;"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;EAC5B,IAAIC,OAAO,GAAGD,IAAI,CAACE,aAAL,CAAmBC,eAAjC,CAD4B,CACsB;EAClD;;EAEA,IAAI,EAAE,2BAA2BH,IAA7B,KAAsC,CAACH,YAAY,CAACI,OAAD,EAAUD,IAAV,CAAvD,EAAwE;IACtE,OAAO;MACLI,IAAI,EAAE,CADD;MAELC,KAAK,EAAE,CAFF;MAGLC,GAAG,EAAE,CAHA;MAILC,MAAM,EAAE;IAJH,CAAP;EAMD,CAX2B,CAW1B;EACF;EACA;EACA;;;EAGA,IAAIC,IAAI,GAAGR,IAAI,CAACS,qBAAL,EAAX;EACA,OAAO;IACLL,IAAI,EAAEM,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACJ,IAAhB,IAAwBH,OAAO,CAACW,UADjC;IAELP,KAAK,EAAEK,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACH,KAAhB,IAAyBJ,OAAO,CAACW,UAFnC;IAGLN,GAAG,EAAEI,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACF,GAAhB,IAAuBL,OAAO,CAACY,SAH/B;IAILN,MAAM,EAAEG,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACD,MAAhB,IAA0BN,OAAO,CAACY;EAJrC,CAAP;AAMD;;AAEDC,MAAM,CAACC,OAAP,GAAiBhB,cAAjB"},"metadata":{},"sourceType":"script"}