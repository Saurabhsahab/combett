{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/Documents/GitHub/combett/client/combett/src/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./home.css\";\nimport \"./cp.css\";\nimport { Component, PropTypes } from 'react';\nimport RichTextEditor from 'react-rte'; // import {Editor, EditorState} from 'draft-js';\n// import { Button } from '@mui/material';\n\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react'; // import \"./index.\"\n// import TextField from '@mui/material/TextField';\n\nimport { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s();\n\n  const editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-cont\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont\",\n      children: [\"Create New Post\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Topic Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"filled\",\n        inputProps: {\n          style: {\n            fontSize: 40,\n            paddingTop: 0\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          onInit: (evt, editor) => editorRef.current = editor,\n          initialValue: \" \",\n          init: {\n            height: 500,\n            menubar: false,\n            fontsize_formats: \"8px 9pt 10pt 11pt 12pt 14pt 18pt 24pt 30pt 36pt 48pt 60pt 72pt 96pt\",\n            file_browser_callback: function (field_name, url, type, win) {\n              win.document.getElementById(field_name).value = 'my browser value';\n            },\n            selector: 'textarea#file-picker',\n            // change this value according to your HTML\n            image_title: true,\n            plugins: 'image',\n            automatic_uploads: true,\n            file_picker_callback: (cb, value, meta) => {\n              const input = document.createElement('input');\n              input.setAttribute('type', 'file');\n              input.setAttribute('accept', 'image/*');\n              input.addEventListener('change', e => {\n                const file = e.target.files[0];\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                  /*\n                    Note: Now we need to register the blob in TinyMCEs image blob\n                    registry. In the next release this part hopefully won't be\n                    necessary, as we are looking to handle it internally.\n                  */\n                  const id = 'blobid' + new Date().getTime();\n                  const blobCache = this.editorUpload.blobCache;\n                  const base64 = reader.result.split(',')[1];\n                  const blobInfo = blobCache.create(id, file, base64);\n                  blobCache.add(blobInfo);\n                  /* call the callback and populate the Title field with the file name */\n                  // cb(blobInfo.blobUri(), { title: file.name });\n                });\n                reader.readAsDataURL(file);\n              });\n              input.click();\n            },\n            toolbar: 'undo redo | blocks | image |' + 'bold italic forecolor fontsizeselect| alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat',\n            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px}'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","Component","PropTypes","RichTextEditor","TextField","useState","useRef","Editor","Button","CreatePost","editorRef","log","current","console","getContent","style","fontSize","paddingTop","margin","evt","editor","height","menubar","fontsize_formats","file_browser_callback","field_name","url","type","win","document","getElementById","value","selector","image_title","plugins","automatic_uploads","file_picker_callback","cb","meta","input","createElement","setAttribute","addEventListener","e","file","target","files","reader","FileReader","id","Date","getTime","blobCache","editorUpload","base64","result","split","blobInfo","create","add","readAsDataURL","click","toolbar","content_style"],"sources":["/home/sudhanshu/Documents/GitHub/combett/client/combett/src/CreatePost.js"],"sourcesContent":["import React from 'react'\nimport  \"./home.css\"\nimport  \"./cp.css\"\nimport {Component, PropTypes} from 'react';\nimport RichTextEditor from 'react-rte';\n// import {Editor, EditorState} from 'draft-js';\n// import { Button } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\n// import \"./index.\"\n// import TextField from '@mui/material/TextField';\nimport { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { Button } from '@mui/material';\nfunction CreatePost() {\n\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n    return (\n        <div className='home-cont'>\n           <div className='cont'>\n               Create New Post\n               <span>Topic Title\n                   </span>\n\n          <TextField variant='filled'  inputProps={{style: {fontSize: 40,paddingTop:0}}}/>\n         <div style={{margin:'10px'}}>\n         <Editor\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue=\" \"\n        init={{\n          height: 500,\n          \n          menubar: false,\n          fontsize_formats:\"8px 9pt 10pt 11pt 12pt 14pt 18pt 24pt 30pt 36pt 48pt 60pt 72pt 96pt\",\n\n          file_browser_callback: function(field_name, url, type, win) {\n            win.document.getElementById(field_name).value = 'my browser value';},\n          selector: 'textarea#file-picker',  // change this value according to your HTML\n            image_title:true,\n          plugins:  'image',\n          automatic_uploads:true,\n          file_picker_callback: (cb, value, meta) => {\n            const input = document.createElement('input');\n            input.setAttribute('type', 'file');\n            input.setAttribute('accept', 'image/*');\n            input.addEventListener('change', (e) => {\n              const file = e.target.files[0];\n        \n              const reader = new FileReader();\n              \n              reader.addEventListener('load', () => {\n                /*\n                  Note: Now we need to register the blob in TinyMCEs image blob\n                  registry. In the next release this part hopefully won't be\n                  necessary, as we are looking to handle it internally.\n                */\n                const id = 'blobid' + (new Date()).getTime();\n              const blobCache=this.editorUpload.blobCache\n                const base64 = reader.result.split(',')[1];\n                const blobInfo = blobCache.create(id, file, base64);\n                blobCache.add(blobInfo);\n        \n                /* call the callback and populate the Title field with the file name */\n                // cb(blobInfo.blobUri(), { title: file.name });\n              });\n              reader.readAsDataURL(file);\n            });\n        \n            input.click();\n          },\n          toolbar: 'undo redo | blocks | image |' +\n          'bold italic forecolor fontsizeselect| alignleft aligncenter ' +\n          'alignright alignjustify | bullist numlist outdent indent | ' +\n          'removeformat',\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px}'\n        }\n      }\n      />\n         </div>\n      <Button variant='contained' size='large' > Submit</Button>\n    \n      {/* <button onClick={log} className=\"sbtn\">Log editor content</button> */}\n           </div>\n          \n        </div>\n    )\n}\n\nexport default CreatePost\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}