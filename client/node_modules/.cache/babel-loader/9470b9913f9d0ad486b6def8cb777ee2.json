{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentStateFragment = require(\"./getContentStateFragment\");\n/**\n * Transpose the characters on either side of a collapsed cursor, or\n * if the cursor is at the end of the block, transpose the last two\n * characters.\n */\n\n\nfunction keyCommandTransposeCharacters(editorState) {\n  var selection = editorState.getSelection();\n\n  if (!selection.isCollapsed()) {\n    return editorState;\n  }\n\n  var offset = selection.getAnchorOffset();\n\n  if (offset === 0) {\n    return editorState;\n  }\n\n  var blockKey = selection.getAnchorKey();\n  var content = editorState.getCurrentContent();\n  var block = content.getBlockForKey(blockKey);\n  var length = block.getLength(); // Nothing to transpose if there aren't two characters.\n\n  if (length <= 1) {\n    return editorState;\n  }\n\n  var removalRange;\n  var finalSelection;\n\n  if (offset === length) {\n    // The cursor is at the end of the block. Swap the last two characters.\n    removalRange = selection.set('anchorOffset', offset - 1);\n    finalSelection = selection;\n  } else {\n    removalRange = selection.set('focusOffset', offset + 1);\n    finalSelection = removalRange.set('anchorOffset', offset + 1);\n  } // Extract the character to move as a fragment. This preserves its\n  // styling and entity, if any.\n\n\n  var movedFragment = getContentStateFragment(content, removalRange);\n  var afterRemoval = DraftModifier.removeRange(content, removalRange, 'backward'); // After the removal, the insertion target is one character back.\n\n  var selectionAfter = afterRemoval.getSelectionAfter();\n  var targetOffset = selectionAfter.getAnchorOffset() - 1;\n  var targetRange = selectionAfter.merge({\n    anchorOffset: targetOffset,\n    focusOffset: targetOffset\n  });\n  var afterInsert = DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n  var newEditorState = EditorState.push(editorState, afterInsert, 'insert-fragment');\n  return EditorState.acceptSelection(newEditorState, finalSelection);\n}\n\nmodule.exports = keyCommandTransposeCharacters;","map":{"version":3,"names":["DraftModifier","require","EditorState","getContentStateFragment","keyCommandTransposeCharacters","editorState","selection","getSelection","isCollapsed","offset","getAnchorOffset","blockKey","getAnchorKey","content","getCurrentContent","block","getBlockForKey","length","getLength","removalRange","finalSelection","set","movedFragment","afterRemoval","removeRange","selectionAfter","getSelectionAfter","targetOffset","targetRange","merge","anchorOffset","focusOffset","afterInsert","replaceWithFragment","newEditorState","push","acceptSelection","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/keyCommandTransposeCharacters.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentStateFragment = require(\"./getContentStateFragment\");\n/**\n * Transpose the characters on either side of a collapsed cursor, or\n * if the cursor is at the end of the block, transpose the last two\n * characters.\n */\n\n\nfunction keyCommandTransposeCharacters(editorState) {\n  var selection = editorState.getSelection();\n\n  if (!selection.isCollapsed()) {\n    return editorState;\n  }\n\n  var offset = selection.getAnchorOffset();\n\n  if (offset === 0) {\n    return editorState;\n  }\n\n  var blockKey = selection.getAnchorKey();\n  var content = editorState.getCurrentContent();\n  var block = content.getBlockForKey(blockKey);\n  var length = block.getLength(); // Nothing to transpose if there aren't two characters.\n\n  if (length <= 1) {\n    return editorState;\n  }\n\n  var removalRange;\n  var finalSelection;\n\n  if (offset === length) {\n    // The cursor is at the end of the block. Swap the last two characters.\n    removalRange = selection.set('anchorOffset', offset - 1);\n    finalSelection = selection;\n  } else {\n    removalRange = selection.set('focusOffset', offset + 1);\n    finalSelection = removalRange.set('anchorOffset', offset + 1);\n  } // Extract the character to move as a fragment. This preserves its\n  // styling and entity, if any.\n\n\n  var movedFragment = getContentStateFragment(content, removalRange);\n  var afterRemoval = DraftModifier.removeRange(content, removalRange, 'backward'); // After the removal, the insertion target is one character back.\n\n  var selectionAfter = afterRemoval.getSelectionAfter();\n  var targetOffset = selectionAfter.getAnchorOffset() - 1;\n  var targetRange = selectionAfter.merge({\n    anchorOffset: targetOffset,\n    focusOffset: targetOffset\n  });\n  var afterInsert = DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n  var newEditorState = EditorState.push(editorState, afterInsert, 'insert-fragment');\n  return EditorState.acceptSelection(newEditorState, finalSelection);\n}\n\nmodule.exports = keyCommandTransposeCharacters;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,2BAAD,CAArC;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASG,6BAAT,CAAuCC,WAAvC,EAAoD;EAClD,IAAIC,SAAS,GAAGD,WAAW,CAACE,YAAZ,EAAhB;;EAEA,IAAI,CAACD,SAAS,CAACE,WAAV,EAAL,EAA8B;IAC5B,OAAOH,WAAP;EACD;;EAED,IAAII,MAAM,GAAGH,SAAS,CAACI,eAAV,EAAb;;EAEA,IAAID,MAAM,KAAK,CAAf,EAAkB;IAChB,OAAOJ,WAAP;EACD;;EAED,IAAIM,QAAQ,GAAGL,SAAS,CAACM,YAAV,EAAf;EACA,IAAIC,OAAO,GAAGR,WAAW,CAACS,iBAAZ,EAAd;EACA,IAAIC,KAAK,GAAGF,OAAO,CAACG,cAAR,CAAuBL,QAAvB,CAAZ;EACA,IAAIM,MAAM,GAAGF,KAAK,CAACG,SAAN,EAAb,CAhBkD,CAgBlB;;EAEhC,IAAID,MAAM,IAAI,CAAd,EAAiB;IACf,OAAOZ,WAAP;EACD;;EAED,IAAIc,YAAJ;EACA,IAAIC,cAAJ;;EAEA,IAAIX,MAAM,KAAKQ,MAAf,EAAuB;IACrB;IACAE,YAAY,GAAGb,SAAS,CAACe,GAAV,CAAc,cAAd,EAA8BZ,MAAM,GAAG,CAAvC,CAAf;IACAW,cAAc,GAAGd,SAAjB;EACD,CAJD,MAIO;IACLa,YAAY,GAAGb,SAAS,CAACe,GAAV,CAAc,aAAd,EAA6BZ,MAAM,GAAG,CAAtC,CAAf;IACAW,cAAc,GAAGD,YAAY,CAACE,GAAb,CAAiB,cAAjB,EAAiCZ,MAAM,GAAG,CAA1C,CAAjB;EACD,CAhCiD,CAgChD;EACF;;;EAGA,IAAIa,aAAa,GAAGnB,uBAAuB,CAACU,OAAD,EAAUM,YAAV,CAA3C;EACA,IAAII,YAAY,GAAGvB,aAAa,CAACwB,WAAd,CAA0BX,OAA1B,EAAmCM,YAAnC,EAAiD,UAAjD,CAAnB,CArCkD,CAqC+B;;EAEjF,IAAIM,cAAc,GAAGF,YAAY,CAACG,iBAAb,EAArB;EACA,IAAIC,YAAY,GAAGF,cAAc,CAACf,eAAf,KAAmC,CAAtD;EACA,IAAIkB,WAAW,GAAGH,cAAc,CAACI,KAAf,CAAqB;IACrCC,YAAY,EAAEH,YADuB;IAErCI,WAAW,EAAEJ;EAFwB,CAArB,CAAlB;EAIA,IAAIK,WAAW,GAAGhC,aAAa,CAACiC,mBAAd,CAAkCV,YAAlC,EAAgDK,WAAhD,EAA6DN,aAA7D,CAAlB;EACA,IAAIY,cAAc,GAAGhC,WAAW,CAACiC,IAAZ,CAAiB9B,WAAjB,EAA8B2B,WAA9B,EAA2C,iBAA3C,CAArB;EACA,OAAO9B,WAAW,CAACkC,eAAZ,CAA4BF,cAA5B,EAA4Cd,cAA5C,CAAP;AACD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBlC,6BAAjB"},"metadata":{},"sourceType":"script"}