{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar adjustBlockDepthForContentState = require(\"./adjustBlockDepthForContentState\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return {\n      url: uri.toString()\n    };\n  },\n  handleKeyCommand: function handleKeyCommand(editorState, command, eventTimeStamp) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n\n  /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    } // First, try to remove a preceding atomic block.\n\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()[\"delete\"](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    } // If that doesn't succeed, try to remove the current block style.\n\n\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n\n    return null;\n  },\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength(); // The cursor is somewhere within the text. Behave normally.\n\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n\n    var blockAfter = content.getBlockAfter(startKey);\n\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n\n    return null;\n  },\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    event.preventDefault();\n    var depth = block.getDepth();\n\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection; // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n\n  /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle(); // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    } // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n\n\n    var content = editorState.getCurrentContent();\n    var newContent; // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n\n  /**\n   * When a collapsed cursor is at the start of a styled block, changes block\n   * type to 'unstyled'. Returns null if selection does not meet that criteria.\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n\n    return null;\n  }\n};\nmodule.exports = RichTextEditorUtil;","map":{"version":3,"names":["DraftModifier","require","EditorState","adjustBlockDepthForContentState","nullthrows","RichTextEditorUtil","currentBlockContainsLink","editorState","selection","getSelection","contentState","getCurrentContent","entityMap","getEntityMap","getBlockForKey","getAnchorKey","getCharacterList","slice","getStartOffset","getEndOffset","some","v","entity","getEntity","__get","getType","getCurrentBlockType","getStartKey","getDataObjectForLinkURL","uri","url","toString","handleKeyCommand","command","eventTimeStamp","toggleInlineStyle","toggleCode","onBackspace","onDelete","insertSoftNewline","insertText","getCurrentInlineStyle","newEditorState","push","forceSelection","getSelectionAfter","isCollapsed","getAnchorOffset","getFocusOffset","content","startKey","blockBefore","getBlockBefore","blockMap","getBlockMap","getKey","withoutAtomicBlock","merge","selectionAfter","withoutBlockStyle","tryToRemoveBlockStyle","block","length","getLength","blockAfter","getBlockAfter","atomicBlockTarget","focusKey","focusOffset","removeRange","onTab","event","maxDepth","key","getFocusKey","type","preventDefault","depth","getDepth","shiftKey","withAdjustment","toggleBlockType","blockType","endKey","getEndKey","target","anchorKey","anchorOffset","isBackward","hasAtomicBlock","skipWhile","_","k","reverse","typeToSet","setBlockType","inlineStyle","currentStyle","setInlineStyleOverride","has","remove","add","newContent","removeInlineStyle","applyInlineStyle","toggleLink","targetSelection","entityKey","withoutLink","applyEntity","offset","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/RichTextEditorUtil.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar adjustBlockDepthForContentState = require(\"./adjustBlockDepthForContentState\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return {\n      url: uri.toString()\n    };\n  },\n  handleKeyCommand: function handleKeyCommand(editorState, command, eventTimeStamp) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n\n  /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    } // First, try to remove a preceding atomic block.\n\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()[\"delete\"](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    } // If that doesn't succeed, try to remove the current block style.\n\n\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n\n    return null;\n  },\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength(); // The cursor is somewhere within the text. Behave normally.\n\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n\n    var blockAfter = content.getBlockAfter(startKey);\n\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n\n    return null;\n  },\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    event.preventDefault();\n    var depth = block.getDepth();\n\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection; // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n\n  /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle(); // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    } // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n\n\n    var content = editorState.getCurrentContent();\n    var newContent; // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n\n  /**\n   * When a collapsed cursor is at the start of a styled block, changes block\n   * type to 'unstyled'. Returns null if selection does not meet that criteria.\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n\n    return null;\n  }\n};\nmodule.exports = RichTextEditorUtil;"],"mappings":"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"},"metadata":{},"sourceType":"script"}