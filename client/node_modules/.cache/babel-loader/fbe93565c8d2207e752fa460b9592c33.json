{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentStateFragment = require(\"./getContentStateFragment\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar clipboard = null;\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\n\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        var keyAfter = content.getKeyAfter(anchorKey);\n\n        if (keyAfter == null) {\n          return editorState;\n        }\n\n        targetRange = selection.set('focusKey', keyAfter).set('focusOffset', 0);\n      } else {\n        targetRange = selection.set('focusOffset', blockEnd);\n      }\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange); // TODO: This should actually append to the current state when doing\n    // successive ^K commands without any other cursor movement\n\n    clipboard = getContentStateFragment(content, targetRange);\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\nmodule.exports = SecondaryClipboard;","map":{"version":3,"names":["DraftModifier","require","EditorState","getContentStateFragment","nullthrows","clipboard","SecondaryClipboard","cut","editorState","content","getCurrentContent","selection","getSelection","targetRange","isCollapsed","anchorKey","getAnchorKey","blockEnd","getBlockForKey","getLength","getAnchorOffset","keyAfter","getKeyAfter","set","afterRemoval","removeRange","push","paste","newContent","replaceWithFragment","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/SecondaryClipboard.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentStateFragment = require(\"./getContentStateFragment\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar clipboard = null;\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\n\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        var keyAfter = content.getKeyAfter(anchorKey);\n\n        if (keyAfter == null) {\n          return editorState;\n        }\n\n        targetRange = selection.set('focusKey', keyAfter).set('focusOffset', 0);\n      } else {\n        targetRange = selection.set('focusOffset', blockEnd);\n      }\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange); // TODO: This should actually append to the current state when doing\n    // successive ^K commands without any other cursor movement\n\n    clipboard = getContentStateFragment(content, targetRange);\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\nmodule.exports = SecondaryClipboard;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,2BAAD,CAArC;;AAEA,IAAIG,UAAU,GAAGH,OAAO,CAAC,qBAAD,CAAxB;;AAEA,IAAII,SAAS,GAAG,IAAhB;AACA;AACA;AACA;AACA;;AAEA,IAAIC,kBAAkB,GAAG;EACvBC,GAAG,EAAE,SAASA,GAAT,CAAaC,WAAb,EAA0B;IAC7B,IAAIC,OAAO,GAAGD,WAAW,CAACE,iBAAZ,EAAd;IACA,IAAIC,SAAS,GAAGH,WAAW,CAACI,YAAZ,EAAhB;IACA,IAAIC,WAAW,GAAG,IAAlB;;IAEA,IAAIF,SAAS,CAACG,WAAV,EAAJ,EAA6B;MAC3B,IAAIC,SAAS,GAAGJ,SAAS,CAACK,YAAV,EAAhB;MACA,IAAIC,QAAQ,GAAGR,OAAO,CAACS,cAAR,CAAuBH,SAAvB,EAAkCI,SAAlC,EAAf;;MAEA,IAAIF,QAAQ,KAAKN,SAAS,CAACS,eAAV,EAAjB,EAA8C;QAC5C,IAAIC,QAAQ,GAAGZ,OAAO,CAACa,WAAR,CAAoBP,SAApB,CAAf;;QAEA,IAAIM,QAAQ,IAAI,IAAhB,EAAsB;UACpB,OAAOb,WAAP;QACD;;QAEDK,WAAW,GAAGF,SAAS,CAACY,GAAV,CAAc,UAAd,EAA0BF,QAA1B,EAAoCE,GAApC,CAAwC,aAAxC,EAAuD,CAAvD,CAAd;MACD,CARD,MAQO;QACLV,WAAW,GAAGF,SAAS,CAACY,GAAV,CAAc,aAAd,EAA6BN,QAA7B,CAAd;MACD;IACF,CAfD,MAeO;MACLJ,WAAW,GAAGF,SAAd;IACD;;IAEDE,WAAW,GAAGT,UAAU,CAACS,WAAD,CAAxB,CAxB6B,CAwBU;IACvC;;IAEAR,SAAS,GAAGF,uBAAuB,CAACM,OAAD,EAAUI,WAAV,CAAnC;IACA,IAAIW,YAAY,GAAGxB,aAAa,CAACyB,WAAd,CAA0BhB,OAA1B,EAAmCI,WAAnC,EAAgD,SAAhD,CAAnB;;IAEA,IAAIW,YAAY,KAAKf,OAArB,EAA8B;MAC5B,OAAOD,WAAP;IACD;;IAED,OAAON,WAAW,CAACwB,IAAZ,CAAiBlB,WAAjB,EAA8BgB,YAA9B,EAA4C,cAA5C,CAAP;EACD,CApCsB;EAqCvBG,KAAK,EAAE,SAASA,KAAT,CAAenB,WAAf,EAA4B;IACjC,IAAI,CAACH,SAAL,EAAgB;MACd,OAAOG,WAAP;IACD;;IAED,IAAIoB,UAAU,GAAG5B,aAAa,CAAC6B,mBAAd,CAAkCrB,WAAW,CAACE,iBAAZ,EAAlC,EAAmEF,WAAW,CAACI,YAAZ,EAAnE,EAA+FP,SAA/F,CAAjB;IACA,OAAOH,WAAW,CAACwB,IAAZ,CAAiBlB,WAAjB,EAA8BoB,UAA9B,EAA0C,iBAA1C,CAAP;EACD;AA5CsB,CAAzB;AA8CAE,MAAM,CAACC,OAAP,GAAiBzB,kBAAjB"},"metadata":{},"sourceType":"script"}