{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @legacyServerCallableInstance\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Immutable = require(\"immutable\");\n\nvar Record = Immutable.Record;\nvar DraftEntityInstanceRecord = Record({\n  type: 'TOKEN',\n  mutability: 'IMMUTABLE',\n  data: Object\n});\n/**\n * An instance of a document entity, consisting of a `type` and relevant\n * `data`, metadata about the entity.\n *\n * For instance, a \"link\" entity might provide a URI, and a \"mention\"\n * entity might provide the mentioned user's ID. These pieces of data\n * may be used when rendering the entity as part of a ContentBlock DOM\n * representation. For a link, the data would be used as an href for\n * the rendered anchor. For a mention, the ID could be used to retrieve\n * a hovercard.\n */\n\nvar DraftEntityInstance = /*#__PURE__*/function (_DraftEntityInstanceR) {\n  _inheritsLoose(DraftEntityInstance, _DraftEntityInstanceR);\n\n  function DraftEntityInstance() {\n    return _DraftEntityInstanceR.apply(this, arguments) || this;\n  }\n\n  var _proto = DraftEntityInstance.prototype;\n\n  _proto.getType = function getType() {\n    return this.get('type');\n  };\n\n  _proto.getMutability = function getMutability() {\n    return this.get('mutability');\n  };\n\n  _proto.getData = function getData() {\n    return this.get('data');\n  };\n\n  return DraftEntityInstance;\n}(DraftEntityInstanceRecord);\n\nmodule.exports = DraftEntityInstance;","map":{"version":3,"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","Immutable","require","Record","DraftEntityInstanceRecord","type","mutability","data","DraftEntityInstance","_DraftEntityInstanceR","apply","arguments","_proto","getType","get","getMutability","getData","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/DraftEntityInstance.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @legacyServerCallableInstance\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Immutable = require(\"immutable\");\n\nvar Record = Immutable.Record;\nvar DraftEntityInstanceRecord = Record({\n  type: 'TOKEN',\n  mutability: 'IMMUTABLE',\n  data: Object\n});\n/**\n * An instance of a document entity, consisting of a `type` and relevant\n * `data`, metadata about the entity.\n *\n * For instance, a \"link\" entity might provide a URI, and a \"mention\"\n * entity might provide the mentioned user's ID. These pieces of data\n * may be used when rendering the entity as part of a ContentBlock DOM\n * representation. For a link, the data would be used as an href for\n * the rendered anchor. For a mention, the ID could be used to retrieve\n * a hovercard.\n */\n\nvar DraftEntityInstance = /*#__PURE__*/function (_DraftEntityInstanceR) {\n  _inheritsLoose(DraftEntityInstance, _DraftEntityInstanceR);\n\n  function DraftEntityInstance() {\n    return _DraftEntityInstanceR.apply(this, arguments) || this;\n  }\n\n  var _proto = DraftEntityInstance.prototype;\n\n  _proto.getType = function getType() {\n    return this.get('type');\n  };\n\n  _proto.getMutability = function getMutability() {\n    return this.get('mutability');\n  };\n\n  _proto.getData = function getData() {\n    return this.get('data');\n  };\n\n  return DraftEntityInstance;\n}(DraftEntityInstanceRecord);\n\nmodule.exports = DraftEntityInstance;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;EAAED,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAArB;EAA0DF,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;EAA2CA,QAAQ,CAACM,SAAT,GAAqBL,UAArB;AAAkC;;AAEvL,IAAIM,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,IAAIC,MAAM,GAAGF,SAAS,CAACE,MAAvB;AACA,IAAIC,yBAAyB,GAAGD,MAAM,CAAC;EACrCE,IAAI,EAAE,OAD+B;EAErCC,UAAU,EAAE,WAFyB;EAGrCC,IAAI,EAAEV;AAH+B,CAAD,CAAtC;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIW,mBAAmB,GAAG,aAAa,UAAUC,qBAAV,EAAiC;EACtEhB,cAAc,CAACe,mBAAD,EAAsBC,qBAAtB,CAAd;;EAEA,SAASD,mBAAT,GAA+B;IAC7B,OAAOC,qBAAqB,CAACC,KAAtB,CAA4B,IAA5B,EAAkCC,SAAlC,KAAgD,IAAvD;EACD;;EAED,IAAIC,MAAM,GAAGJ,mBAAmB,CAACZ,SAAjC;;EAEAgB,MAAM,CAACC,OAAP,GAAiB,SAASA,OAAT,GAAmB;IAClC,OAAO,KAAKC,GAAL,CAAS,MAAT,CAAP;EACD,CAFD;;EAIAF,MAAM,CAACG,aAAP,GAAuB,SAASA,aAAT,GAAyB;IAC9C,OAAO,KAAKD,GAAL,CAAS,YAAT,CAAP;EACD,CAFD;;EAIAF,MAAM,CAACI,OAAP,GAAiB,SAASA,OAAT,GAAmB;IAClC,OAAO,KAAKF,GAAL,CAAS,MAAT,CAAP;EACD,CAFD;;EAIA,OAAON,mBAAP;AACD,CAtBsC,CAsBrCJ,yBAtBqC,CAAvC;;AAwBAa,MAAM,CAACC,OAAP,GAAiBV,mBAAjB"},"metadata":{},"sourceType":"script"}