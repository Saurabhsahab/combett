{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar randomizeBlockMapKeys = require(\"./randomizeBlockMapKeys\");\n\nvar removeEntitiesAtEdges = require(\"./removeEntitiesAtEdges\");\n\nvar getContentStateFragment = function getContentStateFragment(contentState, selectionState) {\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset(); // Edge entities should be stripped to ensure that we don't preserve\n  // invalid partial entities when the fragment is reused. We do, however,\n  // preserve entities that are entirely within the selection range.\n\n  var contentWithoutEdgeEntities = removeEntitiesAtEdges(contentState, selectionState);\n  var blockMap = contentWithoutEdgeEntities.getBlockMap();\n  var blockKeys = blockMap.keySeq();\n  var startIndex = blockKeys.indexOf(startKey);\n  var endIndex = blockKeys.indexOf(endKey) + 1;\n  return randomizeBlockMapKeys(blockMap.slice(startIndex, endIndex).map(function (block, blockKey) {\n    var text = block.getText();\n    var chars = block.getCharacterList();\n\n    if (startKey === endKey) {\n      return block.merge({\n        text: text.slice(startOffset, endOffset),\n        characterList: chars.slice(startOffset, endOffset)\n      });\n    }\n\n    if (blockKey === startKey) {\n      return block.merge({\n        text: text.slice(startOffset),\n        characterList: chars.slice(startOffset)\n      });\n    }\n\n    if (blockKey === endKey) {\n      return block.merge({\n        text: text.slice(0, endOffset),\n        characterList: chars.slice(0, endOffset)\n      });\n    }\n\n    return block;\n  }));\n};\n\nmodule.exports = getContentStateFragment;","map":{"version":3,"names":["randomizeBlockMapKeys","require","removeEntitiesAtEdges","getContentStateFragment","contentState","selectionState","startKey","getStartKey","startOffset","getStartOffset","endKey","getEndKey","endOffset","getEndOffset","contentWithoutEdgeEntities","blockMap","getBlockMap","blockKeys","keySeq","startIndex","indexOf","endIndex","slice","map","block","blockKey","text","getText","chars","getCharacterList","merge","characterList","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/getContentStateFragment.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar randomizeBlockMapKeys = require(\"./randomizeBlockMapKeys\");\n\nvar removeEntitiesAtEdges = require(\"./removeEntitiesAtEdges\");\n\nvar getContentStateFragment = function getContentStateFragment(contentState, selectionState) {\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset(); // Edge entities should be stripped to ensure that we don't preserve\n  // invalid partial entities when the fragment is reused. We do, however,\n  // preserve entities that are entirely within the selection range.\n\n  var contentWithoutEdgeEntities = removeEntitiesAtEdges(contentState, selectionState);\n  var blockMap = contentWithoutEdgeEntities.getBlockMap();\n  var blockKeys = blockMap.keySeq();\n  var startIndex = blockKeys.indexOf(startKey);\n  var endIndex = blockKeys.indexOf(endKey) + 1;\n  return randomizeBlockMapKeys(blockMap.slice(startIndex, endIndex).map(function (block, blockKey) {\n    var text = block.getText();\n    var chars = block.getCharacterList();\n\n    if (startKey === endKey) {\n      return block.merge({\n        text: text.slice(startOffset, endOffset),\n        characterList: chars.slice(startOffset, endOffset)\n      });\n    }\n\n    if (blockKey === startKey) {\n      return block.merge({\n        text: text.slice(startOffset),\n        characterList: chars.slice(startOffset)\n      });\n    }\n\n    if (blockKey === endKey) {\n      return block.merge({\n        text: text.slice(0, endOffset),\n        characterList: chars.slice(0, endOffset)\n      });\n    }\n\n    return block;\n  }));\n};\n\nmodule.exports = getContentStateFragment;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,qBAAqB,GAAGC,OAAO,CAAC,yBAAD,CAAnC;;AAEA,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,yBAAD,CAAnC;;AAEA,IAAIE,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,YAAjC,EAA+CC,cAA/C,EAA+D;EAC3F,IAAIC,QAAQ,GAAGD,cAAc,CAACE,WAAf,EAAf;EACA,IAAIC,WAAW,GAAGH,cAAc,CAACI,cAAf,EAAlB;EACA,IAAIC,MAAM,GAAGL,cAAc,CAACM,SAAf,EAAb;EACA,IAAIC,SAAS,GAAGP,cAAc,CAACQ,YAAf,EAAhB,CAJ2F,CAI5C;EAC/C;EACA;;EAEA,IAAIC,0BAA0B,GAAGZ,qBAAqB,CAACE,YAAD,EAAeC,cAAf,CAAtD;EACA,IAAIU,QAAQ,GAAGD,0BAA0B,CAACE,WAA3B,EAAf;EACA,IAAIC,SAAS,GAAGF,QAAQ,CAACG,MAAT,EAAhB;EACA,IAAIC,UAAU,GAAGF,SAAS,CAACG,OAAV,CAAkBd,QAAlB,CAAjB;EACA,IAAIe,QAAQ,GAAGJ,SAAS,CAACG,OAAV,CAAkBV,MAAlB,IAA4B,CAA3C;EACA,OAAOV,qBAAqB,CAACe,QAAQ,CAACO,KAAT,CAAeH,UAAf,EAA2BE,QAA3B,EAAqCE,GAArC,CAAyC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;IAC/F,IAAIC,IAAI,GAAGF,KAAK,CAACG,OAAN,EAAX;IACA,IAAIC,KAAK,GAAGJ,KAAK,CAACK,gBAAN,EAAZ;;IAEA,IAAIvB,QAAQ,KAAKI,MAAjB,EAAyB;MACvB,OAAOc,KAAK,CAACM,KAAN,CAAY;QACjBJ,IAAI,EAAEA,IAAI,CAACJ,KAAL,CAAWd,WAAX,EAAwBI,SAAxB,CADW;QAEjBmB,aAAa,EAAEH,KAAK,CAACN,KAAN,CAAYd,WAAZ,EAAyBI,SAAzB;MAFE,CAAZ,CAAP;IAID;;IAED,IAAIa,QAAQ,KAAKnB,QAAjB,EAA2B;MACzB,OAAOkB,KAAK,CAACM,KAAN,CAAY;QACjBJ,IAAI,EAAEA,IAAI,CAACJ,KAAL,CAAWd,WAAX,CADW;QAEjBuB,aAAa,EAAEH,KAAK,CAACN,KAAN,CAAYd,WAAZ;MAFE,CAAZ,CAAP;IAID;;IAED,IAAIiB,QAAQ,KAAKf,MAAjB,EAAyB;MACvB,OAAOc,KAAK,CAACM,KAAN,CAAY;QACjBJ,IAAI,EAAEA,IAAI,CAACJ,KAAL,CAAW,CAAX,EAAcV,SAAd,CADW;QAEjBmB,aAAa,EAAEH,KAAK,CAACN,KAAN,CAAY,CAAZ,EAAeV,SAAf;MAFE,CAAZ,CAAP;IAID;;IAED,OAAOY,KAAP;EACD,CA1B4B,CAAD,CAA5B;AA2BD,CAxCD;;AA0CAQ,MAAM,CAACC,OAAP,GAAiB9B,uBAAjB"},"metadata":{},"sourceType":"script"}