{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar convertFromHTMLToContentBlocks = require(\"./convertFromHTMLToContentBlocks\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getSafeBodyFromHTML = require(\"./getSafeBodyFromHTML\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLToContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.reduce(function (acc, textLine, index) {\n      textLine = sanitizeDraftText(textLine);\n      var key = generateRandomKey();\n      var blockNodeConfig = {\n        key: key,\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      }; // next block updates previous block\n\n      if (experimentalTreeDataSupport && index !== 0) {\n        var prevSiblingIndex = index - 1; // update previous block\n\n        var previousBlock = acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\n          nextSibling: key\n        });\n        blockNodeConfig = _objectSpread({}, blockNodeConfig, {\n          prevSibling: previousBlock.getKey()\n        });\n      }\n\n      acc.push(new ContentBlockRecord(blockNodeConfig));\n      return acc;\n    }, []);\n  }\n};\nmodule.exports = DraftPasteProcessor;","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","ContentBlock","require","ContentBlockNode","convertFromHTMLToContentBlocks","generateRandomKey","getSafeBodyFromHTML","gkx","Immutable","sanitizeDraftText","List","Repeat","experimentalTreeDataSupport","ContentBlockRecord","DraftPasteProcessor","processHTML","html","blockRenderMap","processText","textBlocks","character","type","reduce","acc","textLine","index","blockNodeConfig","text","characterList","prevSiblingIndex","previousBlock","merge","nextSibling","prevSibling","getKey","push","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/DraftPasteProcessor.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar convertFromHTMLToContentBlocks = require(\"./convertFromHTMLToContentBlocks\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getSafeBodyFromHTML = require(\"./getSafeBodyFromHTML\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLToContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.reduce(function (acc, textLine, index) {\n      textLine = sanitizeDraftText(textLine);\n      var key = generateRandomKey();\n      var blockNodeConfig = {\n        key: key,\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      }; // next block updates previous block\n\n      if (experimentalTreeDataSupport && index !== 0) {\n        var prevSiblingIndex = index - 1; // update previous block\n\n        var previousBlock = acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\n          nextSibling: key\n        });\n        blockNodeConfig = _objectSpread({}, blockNodeConfig, {\n          prevSibling: previousBlock.getKey()\n        });\n      }\n\n      acc.push(new ContentBlockRecord(blockNodeConfig));\n      return acc;\n    }, []);\n  }\n};\nmodule.exports = DraftPasteProcessor;"],"mappings":"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"},"metadata":{},"sourceType":"script"}