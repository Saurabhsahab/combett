{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar Style = require(\"fbjs/lib/Style\");\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n\nvar getScrollPosition = require(\"fbjs/lib/getScrollPosition\");\n\nvar isNode = require(\"./isInstanceOfNode\");\n/**\n * On `cut` events, native behavior is allowed to occur so that the system\n * clipboard is set properly. This means that we need to take steps to recover\n * the editor DOM state after the `cut` has occurred in order to maintain\n * control of the component.\n *\n * In addition, we can keep a copy of the removed fragment, including all\n * styles and entities, for use as an internal paste.\n */\n\n\nfunction editOnCut(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection();\n  var element = e.target;\n  var scrollPosition; // No selection, so there's nothing to cut.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  } // Track the current scroll position so that it can be forced back in place\n  // after the editor regains control of the DOM.\n\n\n  if (isNode(element)) {\n    var node = element;\n    scrollPosition = getScrollPosition(Style.getScrollParent(node));\n  }\n\n  var fragment = getFragmentFromSelection(editorState);\n  editor.setClipboard(fragment); // Set `cut` mode to disable all event handling temporarily.\n\n  editor.setMode('cut'); // Let native `cut` behavior occur, then recover control.\n\n  setTimeout(function () {\n    editor.restoreEditorDOM(scrollPosition);\n    editor.exitCurrentMode();\n    editor.update(removeFragment(editorState));\n  }, 0);\n}\n\nfunction removeFragment(editorState) {\n  var newContent = DraftModifier.removeRange(editorState.getCurrentContent(), editorState.getSelection(), 'forward');\n  return EditorState.push(editorState, newContent, 'remove-range');\n}\n\nmodule.exports = editOnCut;","map":{"version":3,"names":["DraftModifier","require","EditorState","Style","getFragmentFromSelection","getScrollPosition","isNode","editOnCut","editor","e","editorState","_latestEditorState","selection","getSelection","element","target","scrollPosition","isCollapsed","preventDefault","node","getScrollParent","fragment","setClipboard","setMode","setTimeout","restoreEditorDOM","exitCurrentMode","update","removeFragment","newContent","removeRange","getCurrentContent","push","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/editOnCut.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar Style = require(\"fbjs/lib/Style\");\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n\nvar getScrollPosition = require(\"fbjs/lib/getScrollPosition\");\n\nvar isNode = require(\"./isInstanceOfNode\");\n/**\n * On `cut` events, native behavior is allowed to occur so that the system\n * clipboard is set properly. This means that we need to take steps to recover\n * the editor DOM state after the `cut` has occurred in order to maintain\n * control of the component.\n *\n * In addition, we can keep a copy of the removed fragment, including all\n * styles and entities, for use as an internal paste.\n */\n\n\nfunction editOnCut(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection();\n  var element = e.target;\n  var scrollPosition; // No selection, so there's nothing to cut.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  } // Track the current scroll position so that it can be forced back in place\n  // after the editor regains control of the DOM.\n\n\n  if (isNode(element)) {\n    var node = element;\n    scrollPosition = getScrollPosition(Style.getScrollParent(node));\n  }\n\n  var fragment = getFragmentFromSelection(editorState);\n  editor.setClipboard(fragment); // Set `cut` mode to disable all event handling temporarily.\n\n  editor.setMode('cut'); // Let native `cut` behavior occur, then recover control.\n\n  setTimeout(function () {\n    editor.restoreEditorDOM(scrollPosition);\n    editor.exitCurrentMode();\n    editor.update(removeFragment(editorState));\n  }, 0);\n}\n\nfunction removeFragment(editorState) {\n  var newContent = DraftModifier.removeRange(editorState.getCurrentContent(), editorState.getSelection(), 'forward');\n  return EditorState.push(editorState, newContent, 'remove-range');\n}\n\nmodule.exports = editOnCut;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,4BAAD,CAAtC;;AAEA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,4BAAD,CAA/B;;AAEA,IAAIK,MAAM,GAAGL,OAAO,CAAC,oBAAD,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASM,SAAT,CAAmBC,MAAnB,EAA2BC,CAA3B,EAA8B;EAC5B,IAAIC,WAAW,GAAGF,MAAM,CAACG,kBAAzB;EACA,IAAIC,SAAS,GAAGF,WAAW,CAACG,YAAZ,EAAhB;EACA,IAAIC,OAAO,GAAGL,CAAC,CAACM,MAAhB;EACA,IAAIC,cAAJ,CAJ4B,CAIR;;EAEpB,IAAIJ,SAAS,CAACK,WAAV,EAAJ,EAA6B;IAC3BR,CAAC,CAACS,cAAF;IACA;EACD,CAT2B,CAS1B;EACF;;;EAGA,IAAIZ,MAAM,CAACQ,OAAD,CAAV,EAAqB;IACnB,IAAIK,IAAI,GAAGL,OAAX;IACAE,cAAc,GAAGX,iBAAiB,CAACF,KAAK,CAACiB,eAAN,CAAsBD,IAAtB,CAAD,CAAlC;EACD;;EAED,IAAIE,QAAQ,GAAGjB,wBAAwB,CAACM,WAAD,CAAvC;EACAF,MAAM,CAACc,YAAP,CAAoBD,QAApB,EAnB4B,CAmBG;;EAE/Bb,MAAM,CAACe,OAAP,CAAe,KAAf,EArB4B,CAqBL;;EAEvBC,UAAU,CAAC,YAAY;IACrBhB,MAAM,CAACiB,gBAAP,CAAwBT,cAAxB;IACAR,MAAM,CAACkB,eAAP;IACAlB,MAAM,CAACmB,MAAP,CAAcC,cAAc,CAAClB,WAAD,CAA5B;EACD,CAJS,EAIP,CAJO,CAAV;AAKD;;AAED,SAASkB,cAAT,CAAwBlB,WAAxB,EAAqC;EACnC,IAAImB,UAAU,GAAG7B,aAAa,CAAC8B,WAAd,CAA0BpB,WAAW,CAACqB,iBAAZ,EAA1B,EAA2DrB,WAAW,CAACG,YAAZ,EAA3D,EAAuF,SAAvF,CAAjB;EACA,OAAOX,WAAW,CAAC8B,IAAZ,CAAiBtB,WAAjB,EAA8BmB,UAA9B,EAA0C,cAA1C,CAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB3B,SAAjB"},"metadata":{},"sourceType":"script"}