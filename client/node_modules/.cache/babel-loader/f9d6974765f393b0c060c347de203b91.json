{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar PhotosMimeType = require(\"./PhotosMimeType\");\n\nvar createArrayFromMixed = require(\"./createArrayFromMixed\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar CR_LF_REGEX = new RegExp(\"\\r\\n\", 'g');\nvar LF_ONLY = \"\\n\";\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n/**\n * If DataTransferItem is a file then return the Blob of data.\n *\n * @param {object} item\n * @return {?blob}\n */\n\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\n\nvar DataTransfer = /*#__PURE__*/function () {\n  /**\n   * @param {object} data\n   */\n  function DataTransfer(data) {\n    this.data = data; // Types could be DOMStringList or array\n\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n  /**\n   * Is this likely to be a rich text data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  var _proto = DataTransfer.prototype;\n\n  _proto.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    } // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n\n\n    if (this.isImage()) {\n      return false;\n    }\n\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n  /**\n   * Get raw text.\n   *\n   * @return {?string}\n   */\n\n\n  _proto.getText = function getText() {\n    var text;\n\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n  /**\n   * Get HTML paste data\n   *\n   * @return {?string}\n   */\n\n\n  _proto.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n  /**\n   * Is this a link data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  _proto.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n  /**\n   * Get a link url.\n   *\n   * @return {?string}\n   */\n\n\n  _proto.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n\n    return null;\n  };\n  /**\n   * Is this an image data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  _proto.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n\n    if (isImage) {\n      return true;\n    }\n\n    var items = this.getFiles();\n\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  _proto.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n\n    return null;\n  };\n  /**\n   * Get files.\n   *\n   * @return {array}\n   */\n\n\n  _proto.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Are there any files to fetch?\n   *\n   * @return {boolean}\n   */\n\n\n  _proto.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n\n  return DataTransfer;\n}();\n\nmodule.exports = DataTransfer;","map":{"version":3,"names":["PhotosMimeType","require","createArrayFromMixed","emptyFunction","CR_LF_REGEX","RegExp","LF_ONLY","RICH_TEXT_TYPES","getFileFromDataTransfer","item","kind","getAsFile","DataTransfer","data","types","_proto","prototype","isRichText","getHTML","getText","isImage","some","type","text","getData","length","indexOf","replace","isLink","getLink","url","split","items","getFiles","i","getCount","hasOwnProperty","mozItemCount","files","Array","slice","call","map","filter","thatReturnsArgument","hasFiles","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/fbjs/lib/DataTransfer.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\nvar PhotosMimeType = require(\"./PhotosMimeType\");\n\nvar createArrayFromMixed = require(\"./createArrayFromMixed\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar CR_LF_REGEX = new RegExp(\"\\r\\n\", 'g');\nvar LF_ONLY = \"\\n\";\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n/**\n * If DataTransferItem is a file then return the Blob of data.\n *\n * @param {object} item\n * @return {?blob}\n */\n\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\n\nvar DataTransfer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {object} data\n   */\n  function DataTransfer(data) {\n    this.data = data; // Types could be DOMStringList or array\n\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n  /**\n   * Is this likely to be a rich text data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  var _proto = DataTransfer.prototype;\n\n  _proto.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    } // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n\n\n    if (this.isImage()) {\n      return false;\n    }\n\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n  /**\n   * Get raw text.\n   *\n   * @return {?string}\n   */\n\n\n  _proto.getText = function getText() {\n    var text;\n\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n  /**\n   * Get HTML paste data\n   *\n   * @return {?string}\n   */\n\n\n  _proto.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n  /**\n   * Is this a link data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  _proto.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n  /**\n   * Get a link url.\n   *\n   * @return {?string}\n   */\n\n\n  _proto.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n\n    return null;\n  };\n  /**\n   * Is this an image data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  _proto.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n\n    if (isImage) {\n      return true;\n    }\n\n    var items = this.getFiles();\n\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  _proto.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n\n    return null;\n  };\n  /**\n   * Get files.\n   *\n   * @return {array}\n   */\n\n\n  _proto.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Are there any files to fetch?\n   *\n   * @return {boolean}\n   */\n\n\n  _proto.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n\n  return DataTransfer;\n}();\n\nmodule.exports = DataTransfer;"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAAlC;;AAEA,IAAIE,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIG,WAAW,GAAG,IAAIC,MAAJ,CAAW,MAAX,EAAmB,GAAnB,CAAlB;AACA,IAAIC,OAAO,GAAG,IAAd;AACA,IAAIC,eAAe,GAAG;EACpB,YAAY,CADQ;EAEpB,aAAa;AAFO,CAAtB;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;EACrC,IAAIA,IAAI,CAACC,IAAL,IAAa,MAAjB,EAAyB;IACvB,OAAOD,IAAI,CAACE,SAAL,EAAP;EACD;AACF;;AAED,IAAIC,YAAY,GAChB,aACA,YAAY;EACV;AACF;AACA;EACE,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;IAC1B,KAAKA,IAAL,GAAYA,IAAZ,CAD0B,CACR;;IAElB,KAAKC,KAAL,GAAaD,IAAI,CAACC,KAAL,GAAaZ,oBAAoB,CAACW,IAAI,CAACC,KAAN,CAAjC,GAAgD,EAA7D;EACD;EACD;AACF;AACA;AACA;AACA;;;EAGE,IAAIC,MAAM,GAAGH,YAAY,CAACI,SAA1B;;EAEAD,MAAM,CAACE,UAAP,GAAoB,SAASA,UAAT,GAAsB;IACxC;IACA;IACA;IACA;IACA,IAAI,KAAKC,OAAL,MAAkB,KAAKC,OAAL,EAAtB,EAAsC;MACpC,OAAO,IAAP;IACD,CAPuC,CAOtC;IACF;;;IAGA,IAAI,KAAKC,OAAL,EAAJ,EAAoB;MAClB,OAAO,KAAP;IACD;;IAED,OAAO,KAAKN,KAAL,CAAWO,IAAX,CAAgB,UAAUC,IAAV,EAAgB;MACrC,OAAOf,eAAe,CAACe,IAAD,CAAtB;IACD,CAFM,CAAP;EAGD,CAlBD;EAmBA;AACF;AACA;AACA;AACA;;;EAGEP,MAAM,CAACI,OAAP,GAAiB,SAASA,OAAT,GAAmB;IAClC,IAAII,IAAJ;;IAEA,IAAI,KAAKV,IAAL,CAAUW,OAAd,EAAuB;MACrB,IAAI,CAAC,KAAKV,KAAL,CAAWW,MAAhB,EAAwB;QACtBF,IAAI,GAAG,KAAKV,IAAL,CAAUW,OAAV,CAAkB,MAAlB,CAAP;MACD,CAFD,MAEO,IAAI,KAAKV,KAAL,CAAWY,OAAX,CAAmB,YAAnB,KAAoC,CAAC,CAAzC,EAA4C;QACjDH,IAAI,GAAG,KAAKV,IAAL,CAAUW,OAAV,CAAkB,YAAlB,CAAP;MACD;IACF;;IAED,OAAOD,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAavB,WAAb,EAA0BE,OAA1B,CAAH,GAAwC,IAAnD;EACD,CAZD;EAaA;AACF;AACA;AACA;AACA;;;EAGES,MAAM,CAACG,OAAP,GAAiB,SAASA,OAAT,GAAmB;IAClC,IAAI,KAAKL,IAAL,CAAUW,OAAd,EAAuB;MACrB,IAAI,CAAC,KAAKV,KAAL,CAAWW,MAAhB,EAAwB;QACtB,OAAO,KAAKZ,IAAL,CAAUW,OAAV,CAAkB,MAAlB,CAAP;MACD,CAFD,MAEO,IAAI,KAAKV,KAAL,CAAWY,OAAX,CAAmB,WAAnB,KAAmC,CAAC,CAAxC,EAA2C;QAChD,OAAO,KAAKb,IAAL,CAAUW,OAAV,CAAkB,WAAlB,CAAP;MACD;IACF;EACF,CARD;EASA;AACF;AACA;AACA;AACA;;;EAGET,MAAM,CAACa,MAAP,GAAgB,SAASA,MAAT,GAAkB;IAChC,OAAO,KAAKd,KAAL,CAAWO,IAAX,CAAgB,UAAUC,IAAV,EAAgB;MACrC,OAAOA,IAAI,CAACI,OAAL,CAAa,KAAb,KAAuB,CAAC,CAAxB,IAA6BJ,IAAI,CAACI,OAAL,CAAa,eAAb,KAAiC,CAAC,CAA/D,IAAoEJ,IAAI,CAACI,OAAL,CAAa,gBAAb,CAA3E;IACD,CAFM,CAAP;EAGD,CAJD;EAKA;AACF;AACA;AACA;AACA;;;EAGEX,MAAM,CAACc,OAAP,GAAiB,SAASA,OAAT,GAAmB;IAClC,IAAI,KAAKhB,IAAL,CAAUW,OAAd,EAAuB;MACrB,IAAI,KAAKV,KAAL,CAAWY,OAAX,CAAmB,gBAAnB,KAAwC,CAAC,CAA7C,EAAgD;QAC9C,IAAII,GAAG,GAAG,KAAKjB,IAAL,CAAUW,OAAV,CAAkB,gBAAlB,EAAoCO,KAApC,CAA0C,IAA1C,CAAV;QACA,OAAOD,GAAG,CAAC,CAAD,CAAV;MACD;;MAED,OAAO,KAAKhB,KAAL,CAAWY,OAAX,CAAmB,eAAnB,KAAuC,CAAC,CAAxC,GAA4C,KAAKb,IAAL,CAAUW,OAAV,CAAkB,eAAlB,CAA5C,GAAiF,KAAKX,IAAL,CAAUW,OAAV,CAAkB,KAAlB,CAAxF;IACD;;IAED,OAAO,IAAP;EACD,CAXD;EAYA;AACF;AACA;AACA;AACA;;;EAGET,MAAM,CAACK,OAAP,GAAiB,SAASA,OAAT,GAAmB;IAClC,IAAIA,OAAO,GAAG,KAAKN,KAAL,CAAWO,IAAX,CAAgB,UAAUC,IAAV,EAAgB;MAC5C;MACA;MACA,OAAOA,IAAI,CAACI,OAAL,CAAa,wBAAb,KAA0C,CAAC,CAAlD;IACD,CAJa,CAAd;;IAMA,IAAIN,OAAJ,EAAa;MACX,OAAO,IAAP;IACD;;IAED,IAAIY,KAAK,GAAG,KAAKC,QAAL,EAAZ;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACP,MAA1B,EAAkCS,CAAC,EAAnC,EAAuC;MACrC,IAAIZ,IAAI,GAAGU,KAAK,CAACE,CAAD,CAAL,CAASZ,IAApB;;MAEA,IAAI,CAACtB,cAAc,CAACoB,OAAf,CAAuBE,IAAvB,CAAL,EAAmC;QACjC,OAAO,KAAP;MACD;IACF;;IAED,OAAO,IAAP;EACD,CAtBD;;EAwBAP,MAAM,CAACoB,QAAP,GAAkB,SAASA,QAAT,GAAoB;IACpC,IAAI,KAAKtB,IAAL,CAAUuB,cAAV,CAAyB,OAAzB,CAAJ,EAAuC;MACrC,OAAO,KAAKvB,IAAL,CAAUmB,KAAV,CAAgBP,MAAvB;IACD,CAFD,MAEO,IAAI,KAAKZ,IAAL,CAAUuB,cAAV,CAAyB,cAAzB,CAAJ,EAA8C;MACnD,OAAO,KAAKvB,IAAL,CAAUwB,YAAjB;IACD,CAFM,MAEA,IAAI,KAAKxB,IAAL,CAAUyB,KAAd,EAAqB;MAC1B,OAAO,KAAKzB,IAAL,CAAUyB,KAAV,CAAgBb,MAAvB;IACD;;IAED,OAAO,IAAP;EACD,CAVD;EAWA;AACF;AACA;AACA;AACA;;;EAGEV,MAAM,CAACkB,QAAP,GAAkB,SAASA,QAAT,GAAoB;IACpC,IAAI,KAAKpB,IAAL,CAAUmB,KAAd,EAAqB;MACnB;MACA,OAAOO,KAAK,CAACvB,SAAN,CAAgBwB,KAAhB,CAAsBC,IAAtB,CAA2B,KAAK5B,IAAL,CAAUmB,KAArC,EAA4CU,GAA5C,CAAgDlC,uBAAhD,EAAyEmC,MAAzE,CAAgFxC,aAAa,CAACyC,mBAA9F,CAAP;IACD,CAHD,MAGO,IAAI,KAAK/B,IAAL,CAAUyB,KAAd,EAAqB;MAC1B,OAAOC,KAAK,CAACvB,SAAN,CAAgBwB,KAAhB,CAAsBC,IAAtB,CAA2B,KAAK5B,IAAL,CAAUyB,KAArC,CAAP;IACD,CAFM,MAEA;MACL,OAAO,EAAP;IACD;EACF,CATD;EAUA;AACF;AACA;AACA;AACA;;;EAGEvB,MAAM,CAAC8B,QAAP,GAAkB,SAASA,QAAT,GAAoB;IACpC,OAAO,KAAKZ,QAAL,GAAgBR,MAAhB,GAAyB,CAAhC;EACD,CAFD;;EAIA,OAAOb,YAAP;AACD,CA/KD,EAFA;;AAmLAkC,MAAM,CAACC,OAAP,GAAiBnC,YAAjB"},"metadata":{},"sourceType":"script"}