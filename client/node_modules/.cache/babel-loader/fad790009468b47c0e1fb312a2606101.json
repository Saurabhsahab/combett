{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/Documents/GitHub/combett/client/combett/src/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./home.css\";\nimport \"./cp.css\";\nimport { Component, PropTypes } from 'react';\nimport RichTextEditor from 'react-rte'; // import {Editor, EditorState} from 'draft-js';\n\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react'; // import TextField from '@mui/material/TextField';\n\nimport { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s();\n\n  const editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  tinymce.init({\n    height: 500,\n    menubar: true,\n    selector: 'textarea#file-picker',\n    // change this value according to your HTML\n    image_title: true,\n    plugins: 'image',\n    automatic_uploads: true,\n    file_picker_callback: (cb, value, meta) => {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'file');\n      input.setAttribute('accept', 'image/*');\n      input.addEventListener('change', e => {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.addEventListener('load', () => {\n          /*\n            Note: Now we need to register the blob in TinyMCEs image blob\n            registry. In the next release this part hopefully won't be\n            necessary, as we are looking to handle it internally.\n          */\n          const id = 'blobid' + new Date().getTime();\n          const blobCache = this.activeEditor.editorUpload.blobCache;\n          const base64 = reader.result.split(',')[1];\n          const blobInfo = blobCache.create(id, file, base64);\n          blobCache.add(blobInfo);\n          /* call the callback and populate the Title field with the file name */\n          // cb(blobInfo.blobUri(), { title: file.name });\n        });\n        reader.readAsDataURL(file);\n      });\n      input.click();\n    },\n    toolbar: 'undo redo | blocks | image |' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat',\n    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px}'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-cont\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont\",\n      children: [\"Create New Post\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Topic Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"filled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        onInit: (evt, editor) => editorRef.current = editor,\n        initialValue: \" \",\n        init: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: log,\n        children: \"Log editor content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","Component","PropTypes","RichTextEditor","TextField","useState","useRef","Editor","CreatePost","editorRef","log","current","console","getContent","tinymce","init","height","menubar","selector","image_title","plugins","automatic_uploads","file_picker_callback","cb","value","meta","input","document","createElement","setAttribute","addEventListener","e","file","target","files","reader","FileReader","id","Date","getTime","blobCache","activeEditor","editorUpload","base64","result","split","blobInfo","create","add","readAsDataURL","click","toolbar","content_style","evt","editor"],"sources":["/home/sudhanshu/Documents/GitHub/combett/client/combett/src/CreatePost.js"],"sourcesContent":["import React from 'react'\nimport  \"./home.css\"\nimport  \"./cp.css\"\nimport {Component, PropTypes} from 'react';\nimport RichTextEditor from 'react-rte';\n// import {Editor, EditorState} from 'draft-js';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\n// import TextField from '@mui/material/TextField';\nimport { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nfunction CreatePost() {\n\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n  tinymce.init({\n    height: 500,\n    menubar: true,\n  \n    selector: 'textarea#file-picker',  // change this value according to your HTML\n      image_title:true,\n    plugins:  'image',\n    automatic_uploads:true,\n    file_picker_callback: (cb, value, meta) => {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'file');\n      input.setAttribute('accept', 'image/*');\n  \n      input.addEventListener('change', (e) => {\n        const file = e.target.files[0];\n  \n        const reader = new FileReader();\n        reader.addEventListener('load', () => {\n          /*\n            Note: Now we need to register the blob in TinyMCEs image blob\n            registry. In the next release this part hopefully won't be\n            necessary, as we are looking to handle it internally.\n          */\n          const id = 'blobid' + (new Date()).getTime();\n        const blobCache=this.activeEditor.editorUpload.blobCache\n          const base64 = reader.result.split(',')[1];\n          const blobInfo = blobCache.create(id, file, base64);\n          blobCache.add(blobInfo);\n  \n          /* call the callback and populate the Title field with the file name */\n          // cb(blobInfo.blobUri(), { title: file.name });\n        });\n        reader.readAsDataURL(file);\n      });\n  \n      input.click();\n    },\n    toolbar: 'undo redo | blocks | image |' +\n    'bold italic forecolor | alignleft aligncenter ' +\n    'alignright alignjustify | bullist numlist outdent indent | ' +\n    'removeformat',\n    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px}'\n  });\n\n    return (\n        <div className='home-cont'>\n           <div className='cont'>\n               Create New Post\n               <span>Topic Title\n                   </span>\n\n          <TextField variant='filled'/>\n          <Editor\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue=\" \"\n        init={''\n      }\n      />\n      <button onClick={log}>Log editor content</button>\n           </div>\n          \n        </div>\n    )\n}\n\nexport default CreatePost\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}