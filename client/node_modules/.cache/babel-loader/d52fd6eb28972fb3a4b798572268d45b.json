{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/Documents/GitHub/combett/client/combett/src/SelfUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Drawer from './Drawer';\nimport { Avatar, TextField } from '@mui/material';\nimport Loader from \"./Loader\";\nimport \"./User.css\";\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SelfUser() {\n  _s();\n\n  const [userdata, setuserdata] = useState(false);\n\n  var CryptoJS = require('crypto-js');\n\n  var udata = localStorage.getItem('user');\n  var bytes = CryptoJS.AES.decrypt(udata.toString(), 'somekey');\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8)); // userdata=decryptedData;\n\n  const data = {\n    fname: \"Sudhanshu\",\n    lname: \"Ranjan\",\n    email: \"something@gmail.com\",\n    batch: \"IT-23\",\n    pf_img: \"src\",\n    present_company: \"Google\",\n    about: \"somethinwerwerwewnj dsnjfns fsjnjs fsdfsdfsd sdjsd gsjg sdgsug sdgsug sgbs g\",\n    gh_link: \"someloink\"\n  }; // console.log(userdata)\n\n  useEffect(() => {\n    console.log(udata);\n    setuserdata(decryptedData); // console.log(udata)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Blog-cont\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog open\",\n        children: [!userdata ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"boldtext\",\n            children: \" Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 1\n          }, this), data.fname, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"boldtext\",\n            children: \" Email Id:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 1\n          }, this), \" \", data.email, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"boldtext\",\n            children: \" Batch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 1\n          }, this), \" \", data.batch, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"boldtext\",\n            children: \" Present Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 1\n          }, this), \" \", data.present_company, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"boldtext\",\n            children: \" About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 1\n          }, this), \" \", data.email, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"boldtext\",\n            children: \" Github Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 1\n          }, this), \" \", data.gh_link]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"filled\",\n            inputProps: {\n              style: {\n                paddingTop: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Chip Filled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Chip Outlined\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelfUser, \"S1rzutIGbCKIB8ks2wjp3w2mgwE=\");\n\n_c = SelfUser;\nexport default SelfUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelfUser\");","map":{"version":3,"names":["React","useEffect","useState","Drawer","Avatar","TextField","Loader","Chip","Stack","SelfUser","userdata","setuserdata","CryptoJS","require","udata","localStorage","getItem","bytes","AES","decrypt","toString","decryptedData","JSON","parse","enc","Utf8","data","fname","lname","email","batch","pf_img","present_company","about","gh_link","console","log","style","paddingTop"],"sources":["/home/sudhanshu/Documents/GitHub/combett/client/combett/src/SelfUser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Drawer from './Drawer'\nimport { Avatar,TextField } from '@mui/material'\nimport Loader from \"./Loader\"\nimport \"./User.css\"\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\n\nfunction SelfUser() {\nconst [userdata, setuserdata] = useState(false)\nvar CryptoJS=require('crypto-js');\nvar udata=localStorage.getItem('user');\n var bytes  = CryptoJS.AES.decrypt(udata.toString(), 'somekey');\nvar decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n// userdata=decryptedData;\n\nconst data={\n  fname:\"Sudhanshu\",\n  lname:\"Ranjan\",\n  email: \"something@gmail.com\",\n  batch:\"IT-23\",\n  pf_img:\"src\",\n  present_company:\"Google\",\n  about:\"somethinwerwerwewnj dsnjfns fsjnjs fsdfsdfsd sdjsd gsjg sdgsug sdgsug sgbs g\",gh_link:\"someloink\"\n}\n// console.log(userdata)\n\nuseEffect(() => {\nconsole.log(udata)\nsetuserdata(decryptedData)\n\n    // console.log(udata)\n \n  }\n, [])\n\n\n  return (\n    <div>\n<Drawer />\n<div className='Blog-cont'>\n    <div className='blog open'>\n      {\n          !userdata?<Loader/>:<Avatar />\n      }  \n      {/* {userdata.name} */}\n<div className='details'>\n<span className='boldtext'> Name:</span>{data.fname}\n\n<span className='boldtext'> Email Id:</span> {data.email}\n<span className='boldtext'> Batch</span> {data.batch}\n<span className='boldtext'> Present Company</span> {data.present_company}\n<span className='boldtext'> About</span> {data.email}\n<span className='boldtext'> Github Link</span> {data.gh_link}\n\n</div>\n\n\n  \n      \n    <Stack direction=\"row\" spacing={1}>\n<TextField variant='filled'  inputProps={{style: {paddingTop:0}}}/>\n      \n      <Chip label=\"Chip Filled\" />\n      <Chip label=\"Chip Outlined\" variant=\"outlined\" />\n    </Stack>\n    </div>\n    </div>\n\n    </div>\n  )\n}\n\nexport default SelfUser"],"mappings":"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"},"metadata":{},"sourceType":"module"}