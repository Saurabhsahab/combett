{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar KEY_DELIMITER = '-';\nvar DraftOffsetKey = {\n  encode: function encode(blockKey, decoratorKey, leafKey) {\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n  },\n  decode: function decode(offsetKey) {\n    // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\n    var _offsetKey$split$reve = offsetKey.split(KEY_DELIMITER).reverse(),\n        leafKey = _offsetKey$split$reve[0],\n        decoratorKey = _offsetKey$split$reve[1],\n        blockKeyParts = _offsetKey$split$reve.slice(2);\n\n    return {\n      // Recomposes the parts of blockKey after reversing them\n      blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\n      decoratorKey: parseInt(decoratorKey, 10),\n      leafKey: parseInt(leafKey, 10)\n    };\n  }\n};\nmodule.exports = DraftOffsetKey;","map":{"version":3,"names":["KEY_DELIMITER","DraftOffsetKey","encode","blockKey","decoratorKey","leafKey","decode","offsetKey","_offsetKey$split$reve","split","reverse","blockKeyParts","slice","join","parseInt","module","exports"],"sources":["/home/sudhanshu/Documents/combett/node_modules/draft-js/lib/DraftOffsetKey.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar KEY_DELIMITER = '-';\nvar DraftOffsetKey = {\n  encode: function encode(blockKey, decoratorKey, leafKey) {\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n  },\n  decode: function decode(offsetKey) {\n    // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\n    var _offsetKey$split$reve = offsetKey.split(KEY_DELIMITER).reverse(),\n        leafKey = _offsetKey$split$reve[0],\n        decoratorKey = _offsetKey$split$reve[1],\n        blockKeyParts = _offsetKey$split$reve.slice(2);\n\n    return {\n      // Recomposes the parts of blockKey after reversing them\n      blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\n      decoratorKey: parseInt(decoratorKey, 10),\n      leafKey: parseInt(leafKey, 10)\n    };\n  }\n};\nmodule.exports = DraftOffsetKey;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa,GAAG,GAApB;AACA,IAAIC,cAAc,GAAG;EACnBC,MAAM,EAAE,SAASA,MAAT,CAAgBC,QAAhB,EAA0BC,YAA1B,EAAwCC,OAAxC,EAAiD;IACvD,OAAOF,QAAQ,GAAGH,aAAX,GAA2BI,YAA3B,GAA0CJ,aAA1C,GAA0DK,OAAjE;EACD,CAHkB;EAInBC,MAAM,EAAE,SAASA,MAAT,CAAgBC,SAAhB,EAA2B;IACjC;IACA,IAAIC,qBAAqB,GAAGD,SAAS,CAACE,KAAV,CAAgBT,aAAhB,EAA+BU,OAA/B,EAA5B;IAAA,IACIL,OAAO,GAAGG,qBAAqB,CAAC,CAAD,CADnC;IAAA,IAEIJ,YAAY,GAAGI,qBAAqB,CAAC,CAAD,CAFxC;IAAA,IAGIG,aAAa,GAAGH,qBAAqB,CAACI,KAAtB,CAA4B,CAA5B,CAHpB;;IAKA,OAAO;MACL;MACAT,QAAQ,EAAEQ,aAAa,CAACD,OAAd,GAAwBG,IAAxB,CAA6Bb,aAA7B,CAFL;MAGLI,YAAY,EAAEU,QAAQ,CAACV,YAAD,EAAe,EAAf,CAHjB;MAILC,OAAO,EAAES,QAAQ,CAACT,OAAD,EAAU,EAAV;IAJZ,CAAP;EAMD;AAjBkB,CAArB;AAmBAU,MAAM,CAACC,OAAP,GAAiBf,cAAjB"},"metadata":{},"sourceType":"script"}